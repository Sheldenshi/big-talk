{"version":3,"sources":["Card/Card.jsx","Draw/Draw.jsx","Config/Firebase/db_config.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","question","Draw","drawCard","bind","this","onClick","Component","DB_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","firebase","apps","length","app","initializeApp","database","ref","child","updateCard","state","cards","currentCard","currentCards","on","snap","push","id","key","val","setState","getRandomCard","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAWeA,G,YARF,SAACC,GAAD,OACX,qBAAKC,UAAU,iBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,WAAf,SAA2BD,EAAME,iBCiBxBC,G,wDAnBX,WAAYH,GAAQ,IAAD,8BACf,cAAMA,IAEDI,SAAW,EAAKA,SAASC,KAAd,gBAHD,E,uDAOfC,KAAKN,MAAMI,a,6BAGRJ,GACH,OACI,qBAAKC,UAAU,kBAAf,SACI,wBAAQA,UAAU,MAAMM,QAASD,KAAKF,SAAtC,gC,GAdGI,cCHNC,EAAY,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gB,QC2DJC,G,wDAzDX,WAAYlB,GAAQ,IAAD,6BACf,cAAMA,GACDmB,IAASC,KAAKC,SACf,EAAKC,IAAMH,IAASI,cAAcd,IAEtC,EAAKe,SAAWL,IAASK,WAAWC,MAAMC,MAAM,SAChD,EAAKC,WAAa,EAAKA,WAAWtB,KAAhB,gBAClB,EAAKuB,MAAQ,CACTC,MAAO,GACPC,YAAa,IATF,E,gEAYE,IAAD,OACVC,EAAezB,KAAKsB,MAAMC,MAEhCvB,KAAKkB,SAASQ,GAAG,eAAe,SAAAC,GAC5BF,EAAaG,KAAK,CACdC,GAAIF,EAAKG,IACTlC,SAAU+B,EAAKI,MAAMnC,WAEzB,EAAKoC,SAAS,CACVT,MAAOE,EACPD,YAAa,EAAKS,cAAcR,U,oCAO9BA,GAEV,OADWA,EAAaS,KAAKC,MAAMD,KAAKE,SAAWX,EAAaV,W,mCAKhE,IAAMU,EAAezB,KAAKsB,MAAMC,MAChCvB,KAAKgC,SAAS,CACVR,YAAaxB,KAAKiC,cAAcR,O,+BAKpC,OACI,sBAAK9B,UAAU,MAAf,UACI,qBAAKA,UAAU,UAAf,SACI,cAAC,EAAD,CAAMC,SAAUI,KAAKsB,MAAME,YAAY5B,aAG3C,qBAAKD,UAAU,YAAf,SACI,cAAC,EAAD,CAAMG,SAAUE,KAAKqB,sB,GAlDvBnB,cCGHmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.827c89ab.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => (\n  <div className=\"card-container\">\n    <div className=\"card\">\n      <div className=\"question\">{props.question}</div>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React, { Component } from 'react';\nimport './Draw.css';\n\nclass Draw extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.drawCard = this.drawCard.bind(this);\n    }\n\n    drawCard(){\n        this.props.drawCard();\n    }\n\n    render(props) {\n        return(\n            <div className=\"buttonContainer\">\n                <button className=\"btn\" onClick={this.drawCard}>New Question</button>\n            </div>\n        );\n    }\n}\n\nexport default Draw;","export const DB_CONFIG = {\n    apiKey: \"AIzaSyCVireg_8SNszW2y2-J5oU_QnzQilIM3uM\",\n    authDomain: \"big-talk-d39a7.firebaseapp.com\",\n    databaseURL: \"https://big-talk-d39a7.firebaseio.com\",\n    projectId: \"big-talk-d39a7\",\n    storageBucket: \"big-talk-d39a7.appspot.com\",\n    messagingSenderId: \"711762200445\",\n    appId: \"1:711762200445:web:8ed953423524a294306e14\",\n    measurementId: \"G-E0Q9GNHV0E\"\n\n}","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Card from \"./Card/Card\";\nimport Draw from \"./Draw/Draw\";\nimport { DB_CONFIG } from './Config/Firebase/db_config';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        if (!firebase.apps.length) {\n            this.app = firebase.initializeApp(DB_CONFIG);\n        }\n        this.database = firebase.database().ref().child('cards');\n        this.updateCard = this.updateCard.bind(this);\n        this.state = {\n            cards: [],\n            currentCard: {}\n        }\n    }\n    componentDidMount() {\n        const currentCards = this.state.cards;\n\n        this.database.on('child_added', snap => {\n            currentCards.push({\n                id: snap.key,\n                question: snap.val().question\n            })\n            this.setState({\n                cards: currentCards,\n                currentCard: this.getRandomCard(currentCards)\n            })\n        })\n\n        \n    }\n    \n    getRandomCard(currentCards) {\n        var card = currentCards[Math.floor(Math.random() * currentCards.length)];\n        return(card);\n    }\n    \n    updateCard() {\n        const currentCards = this.state.cards;\n        this.setState({\n            currentCard: this.getRandomCard(currentCards)\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"cardRow\">\n                    <Card question={this.state.currentCard.question}/>\n                </div>\n\n                <div className=\"buttonRow\">\n                    <Draw drawCard={this.updateCard}/>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}